/*
 * Quanta-Lang semantics
*/

// Define package
package stdlib.io;

// struct
struct Vector3
{
    // Default to 0
    var x: i32 = 0;
    var y: i32 = 0;
    var z: i32 = 0;
};

// Wrapper class
class Vector3
{
    private var array: [ i64 ] = { -1009876545678 };
    private var vec3: Vector3[] = struct Vector3 { x = 10, y = 20, z = -10 };

    public Vector3(x: i32, y: i32, z: i32) -> Vector3
    {
        vec3.x = x;
        vec3.y = y;
        vec3.z = z;
    };
    public static Dot(vec1: Vector3, vec2: Vector3) -> Vector3 // Return Vector3 class
    {
        return new Vector3(vec1.x + vec2.x, vec1.y + vec2.y, vec1.z + vec2.z);
    };

    public static Lerp(vec1: Vector3, vec2: Vector3, dt: f32) -> Vector3 // Return Vector3 class
    {
        return new Vector3(
            vec1.x + (vec2.x - vec1.x) * dt,
            vec1.y + (vec2.y - vec1.y) * dt,
            vec1.z + (vec2.z - vec1.z) * dt
        );
    };

    /* And so on */
}

// Driver function
function Main() -> u8
{
    var x: u32 = 0;
    ++x;
    x++;

    var y: u32 = x + 5;

    return 0;
}